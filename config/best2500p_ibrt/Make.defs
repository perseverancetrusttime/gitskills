############################################################################
# boards/best2001_ep/Make.defs
#
#   Copyright (C) 2018 Gregory Nutt. All rights reserved.
#   Author: Gregory Nutt <gnutt@nuttx.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name NuttX nor the names of its contributors may be
#    used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
############################################################################
export CONFIG_ARCH_BOARD := best2500p_ibrt
include ${TOPDIR}/.config

CONFIG_PASS1_TARGET="all $(CONFIG_ARCH_BOARD).a"
CONFIG_PASS1_BUILDIR="../../../"
CONFIG_PASS1_OBJECT=""

include ${TOPDIR}/tools/Config.mk
include ${TOPDIR}/arch/arm/src/armv8-m/Toolchain.defs

ifeq ($(CONFIG_BOOT_RUNFROMFLASH),y)
 LDSCRIPT = _best1000.lds
else ifeq ($(CONFIG_BOOT_RUNFROMISRAM),y)
 LDSCRIPT = sram.ld
endif

$(warning, LDSCRIPT is $(LDSCRIPT))
ifeq ($(WINTOOL),y)
  # Windows-native toolchains
  ARCHINCLUDES = -I. -isystem "${shell cygpath -w $(TOPDIR)/include}"
  ARCHSCRIPT = -T "${shell cygpath -w $(TOPDIR)/../vendor/bes/configs/$(CONFIG_ARCH_BOARD)/scripts/$(LDSCRIPT)}"
else
  # Linux/Cygwin-native toolchain
  ARCHINCLUDES = -I. -isystem $(TOPDIR)/include
  ARCHSCRIPT = -T$(TOPDIR)/$(CONFIG_PASS1_BUILDIR)/out/$(CONFIG_ARCH_BOARD)/$(LDSCRIPT)
endif
$(warning, LDSCRIPT is $(LDSCRIPT))
$(warning, ARCHSCRIPT is $(ARCHSCRIPT))

CC = $(CROSSDEV)gcc
CXX = $(CROSSDEV)g++
CPP = $(CROSSDEV)gcc -E -P -x c
LD = $(CROSSDEV)gcc
STRIP = $(CROSSDEV)strip --strip-unneeded
AR = $(CROSSDEV)ar rcs
NM = $(CROSSDEV)nm
OBJCOPY = $(CROSSDEV)objcopy
OBJDUMP = $(CROSSDEV)objdump

ARCHCCVERSION = ${shell $(CC) -v 2>&1 | sed -n '/^gcc version/p' | sed -e 's/^gcc version \([0-9\.]\)/\1/g' -e 's/[-\ ].*//g' -e '1q'}
ARCHCCMAJOR = ${shell echo $(ARCHCCVERSION) | cut -d'.' -f1}

ifeq ($(CONFIG_DEBUG_SYMBOLS),y)
  ARCHOPTIMIZATION = -g
endif

ifneq ($(CONFIG_DEBUG_NOOPT),y)
  ARCHOPTIMIZATION += $(MAXOPTIMIZATION) -fno-strict-aliasing -fno-strength-reduce -fomit-frame-pointer
  ARCHOPTIMIZATION += -ffunction-sections -fdata-sections
endif

ARCHCPUFLAGS += -mcpu=cortex-m33 -mfpu=fpv5-sp-d16
ARCHCFLAGS = -fno-builtin -nostdlib 
ARCHCXXFLAGS = -fno-builtin -fno-exceptions -fcheck-new -fno-rtti -std=c++17 -D__NuttX__
ARCHWARNINGS = -Wall -Wstrict-prototypes -Wshadow -Wundef
ARCHWARNINGSXX = -Wall -Wshadow -Wundef
ARCHDEFINES =
ARCHPICFLAGS = -fpic -msingle-pic-base -mpic-register=r10

CFLAGS = $(ARCHCFLAGS) $(ARCHWARNINGS) $(ARCHOPTIMIZATION) $(ARCHCPUFLAGS) $(ARCHINCLUDES) $(ARCHDEFINES) $(EXTRAFLAGS) -pipe 
CPICFLAGS = $(ARCHPICFLAGS) $(CFLAGS)
CXXFLAGS = $(ARCHCXXFLAGS) $(ARCHWARNINGSXX) $(ARCHOPTIMIZATION) $(ARCHCPUFLAGS) $(ARCHXXINCLUDES) $(ARCHDEFINES) $(EXTRAFLAGS) -pipe -nostdinc++
CXXPICFLAGS = $(ARCHPICFLAGS) $(CXXFLAGS)
CPPFLAGS = $(ARCHINCLUDES) $(ARCHDEFINES) $(EXTRAFLAGS)
AFLAGS = $(CFLAGS) -D__ASSEMBLY__

NXFLATLDFLAGS1 = -r -d -warn-common
NXFLATLDFLAGS2 = $(NXFLATLDFLAGS1) -T$(TOPDIR)/binfmt/libnxflat/gnu-nxflat-pcrel.ld -no-check-sections
LDNXFLATFLAGS = -nostdlib -static

ASMEXT = .S
OBJEXT = .o
LIBEXT = .a
EXEEXT =
LDFLAGS += -Wl,--entry=Boot_Loader -Wl,--gc-sections -Wl,-static -nostdlib -Wl,-X -Wl,--build-id
LDFLAGS += -Wl,--allow-multiple-definition -Wl,--whole-archive -Wl,-Map=$(TOPDIR)$(DELIM)nuttx.map

EXTRA_LIBPATHS += -L $(TOPDIR)/$(CONFIG_PASS1_BUILDIR)/out/$(CONFIG_ARCH_BOARD)
EXTRA_LIBS     += -l$(CONFIG_ARCH_BOARD)

ifeq ($(CONFIG_AIVS_DEMO),y)
EXTRA_LIBS += -laivs
EXTRA_LIBPATHS += -L $(TOPDIR)/../external/aivs_demo/aivs/lib
endif

LDSTARTGROUP = -Wl,--start-group
LDENDGROUP   = -Wl,--end-group
 
ifneq ($(CROSSDEV),arm-nuttx-elf-)
  LDFLAGS += -nostartfiles -nodefaultlibs
endif
ifeq ($(CONFIG_DEBUG_SYMBOLS),y)
  LDFLAGS += -g
endif

ifneq ($(CONFIG_DEBUG_NOOPT),y)
  LDFLAGS += -Wl,--gc-sections
endif

# Make sure that this directory in included in the VPATH

#$(ARCHSCRIPT) :
#	$(call PREPROCESS, arch/arm/src/bes130x/mcu-sw-master/scripts/link/best1000.lds.S, $@)

HOSTCC = gcc
HOSTINCLUDES = -I.
HOSTCFLAGS = -Wall -Wstrict-prototypes -Wshadow -Wundef -g -pipe
HOSTLDFLAGS =
ifeq ($(CONFIG_HOST_WINDOWS),y)
  HOSTEXEEXT = .exe
else
  HOSTEXEEXT =
endif

ifeq ($(WINTOOL),y)
  # Windows-native host tools
  DIRLINK = $(TOPDIR)/tools/copydir.sh
  DIRUNLINK = $(TOPDIR)/tools/unlink.sh
  MKDEP = $(TOPDIR)/tools/mkwindeps.sh
else
  # Linux/Cygwin-native host tools
  MKDEP = $(TOPDIR)/tools/mkdeps$(HOSTEXEEXT)
endif

ifeq ($(CONFIG_GEN_RECOVERY_BIN),y)
define POSTBUILD
	$(Q)echo "Generating: $(NUTTXNAME)_ota.bin"; \
	cp $(NUTTXNAME).bin $(NUTTXNAME)_ota.bin;
endef
else
ifeq ($(CONFIG_DSP_IMAGE_COMP)-$(CONFIG_ARCH_BOARD),y-best2001a7_ep)
define POSTBUILD
	$(Q)echo "Generating: $(NUTTXNAME)_a7.bin"; \
	lzma -z -k -f -9 $(NUTTXNAME).bin; \
	mv $(NUTTXNAME).bin.lzma $(NUTTXNAME)_a7.bin;
endef
endif
endif
